<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>北京旅游小记</title>
      <link href="/Bihanso.github.io//e0624da7.html"/>
      <url>/Bihanso.github.io//e0624da7.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/Bihanso.github.io/assets/css/APlayer.min.css"><script src="/Bihanso.github.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Happy"><a href="#Happy" class="headerlink" title="Happy"></a>Happy</h2><p>北京旅游小记</p><div align='center'>  <img src='../images/1.jpg' width=450px>  <p align='center' style='font-size:20px;font-family:kaiti;color:red'>二姐拍的太帅了哈哈哈</p></div><div align='center'>  <img src='../images/2.jpg' width=450px>  <p align='center' style='font-size:20px;font-family:kaiti;color:red'>和三姐在恭王府</p></div><div align='center'>  <img src='../images/3.jpg' width=450px>  <p align='center' style='font-size:20px;font-family:kaiti;color:red'>老妈在恭王府</p></div><div align='center'>  <img src='../images/4.jpg' width=450px>  <p align='center' style='font-size:20px;font-family:kaiti;color:red'>二姐在恭王府</p></div><div align='center'>  <img src='../images/5.jpg' width=450px>  <p align='center' style='font-size:20px;font-family:kaiti;color:red'>毛蛋第一次吃哭了</p></div><div align='center'>  <img src='../images/6.jpg' width=450px>  <p align='center' style='font-size:20px;font-family:kaiti;color:red'>故宫实在太大了，整个被震撼住</p></div><p>观光车看的太开心了</p><div align='center'>  <img src='../images/7.jpg' width=450px>  <p align='center' style='font-size:20px;font-family:kaiti;color:red'>大姐与彤彤在北京观光车上</p></div><div align='center'>  <img src='../images/8.jpg' width=450px>  <p align='center' style='font-size:20px;font-family:kaiti;color:red'>三姐老妈霖霖在观光车上 </p></div><p align='center'>     <iframe src="//player.bilibili.com/player.html?aid=395178570&bvid=BV1To4y1a74u&cid=1029590125&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Bihanso.github.io//0.html"/>
      <url>/Bihanso.github.io//0.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/Bihanso.github.io/assets/css/APlayer.min.css"><script src="/Bihanso.github.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>title: 数据库学习</p><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="Linux安装"><a href="#Linux安装" class="headerlink" title="Linux安装"></a>Linux安装</h2><p>先检查一下linu是否已经安装mysql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql start</span><br></pre></td></tr></table></figure><p>如果返回的是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql: unrecognized service</span><br></pre></td></tr></table></figure><p>代表没有安装mysql，需要在线安装mysql。输入下面几行命令即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#安装 MySQL 服务端、核心程序</span><br><span class="line">sudo apt-get install mysql-server</span><br><span class="line"></span><br><span class="line">#安装 MySQL 客户端</span><br><span class="line">sudo apt-get install mysql-client</span><br></pre></td></tr></table></figure><p>在安装过程中会提示确认输入 YES，设置 root 用户密码（之后也可以修改）等，稍等片刻便可安装成功。</p><p>安装结束后，用命令验证是否安装并启动成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure><p>如果提示有tcp信息，说明安装成功，可以使用下面的命令按照自己的需求对数据库进行配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure><p>安装成功。</p><h2 id="数据库常用命令"><a href="#数据库常用命令" class="headerlink" title="数据库常用命令"></a>数据库常用命令</h2><h3 id="打开mysql"><a href="#打开mysql" class="headerlink" title="打开mysql"></a>打开mysql</h3><p>使用如下两条命令，打开 MySQL 服务并使用 root 用户登录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql start</span><br><span class="line">mysql -u root   #会让你输入root密码，如果安装时没让您输入root密码的话，</span><br></pre></td></tr></table></figure><p>登陆成功，会显示welcome to the Mysql。</p><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><p>命令 <span style="color:red;font-size:文字大小;font-family:字体;"><strong>show databases；</strong></span>查看有哪些数据库，<strong>注意不要漏掉；</strong></p><h3 id="链接数据库"><a href="#链接数据库" class="headerlink" title="链接数据库"></a>链接数据库</h3><p>命令为<span style="color:red;font-size:文字大小;font-family:字体;"> <strong>use &lt;数据库名字&gt;</strong></span>，这里可以不用加分号，我们可以选择任意一个数据库，比如</p><h3 id="查看数据库-1"><a href="#查看数据库-1" class="headerlink" title="查看数据库"></a>查看数据库</h3><p>命令<span style="color:red;font-size:文字大小;font-family:字体;"> <strong>show tables;</strong></span> <strong>注意不要漏掉；</strong> 退出数据库可用 exit 或者 quit。</p><h2 id="数据库练习操作"><a href="#数据库练习操作" class="headerlink" title="数据库练习操作"></a>数据库练习操作</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>使用命令 <span style="color:red;font-size:文字大小;font-family:字体;"> <strong>create database <databasename>;</strong></span> 注意不漏掉分号，也不要给database加s。创建成功之后，可以使用命令 <span style="color:red;font-size:文字大小;font-family:字体;"> <strong>show databases;</strong></span> 查看已经建立好的数据库，在大多数系统中，sql语句不区分大小写。</p><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><p>使用命令 <span style="color:red;font-size:文字大小;font-family:字体;"> <strong>drop database <databasename>;</strong></span></p><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>命令 <span style="color:red;font-size:文字大小;font-family:字体;"> <strong>use <databasename>;</strong></span> 显示database changed，则链接成功，可以使用show tables; 看数据库中有哪些表。</p><h3 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h3><p>数据表（<code>table</code>）简称表，它是数据库最重要的组成部分之一。数据库只是一个框架，表才是实质内容。</p><p>而一个数据库中一般会有多张表，这些各自独立的表通过建立关系被联接起来，才成为可以交叉查阅、一目了然的数据库。如下便是一张表：</p><div class="table-container"><table><thead><tr><th>ID</th><th>name</th><th>phone</th></tr></thead><tbody><tr><td>01</td><td>Tom</td><td>110110110</td></tr><tr><td>02</td><td>Jack</td><td>119119119</td></tr><tr><td>03</td><td>Rose</td><td>114114114</td></tr></tbody></table></div><h3 id="新建数据库表"><a href="#新建数据库表" class="headerlink" title="新建数据库表"></a>新建数据库表</h3><p>新建表语句格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE name(</span><br><span class="line">列名a 数据类型,</span><br><span class="line">列名b 数据类型，</span><br><span class="line">列名c 数据类型</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>注意不要忘记加分号（需要加分号的需要总结，可以看文章最后面）。</p><p>例子，比如在公司数据库中建立一个employee的表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE employee(</span><br><span class="line">id int(10),</span><br><span class="line">name char(20),</span><br><span class="line">phone int(12)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>数据库中常用的数据类型可以见下表：</p><div class="table-container"><table><thead><tr><th>数据类型</th><th>大小(字节)</th><th>用途</th><th>格式</th></tr></thead><tbody><tr><td>INT</td><td>4</td><td>整数</td><td></td></tr><tr><td>FLOAT</td><td>4</td><td>单精度浮点数</td><td></td></tr><tr><td>DOUBLE</td><td>8</td><td>双精度浮点数</td><td></td></tr><tr><td>ENUM</td><td>—</td><td>单选,比如性别</td><td>ENUM(‘a’,’b’,’c’)</td></tr><tr><td>SET</td><td>—</td><td>多选</td><td>SET(‘1’,’2’,’3’)</td></tr><tr><td>DATE</td><td>3</td><td>日期</td><td>YYYY-MM-DD</td></tr><tr><td>TIME</td><td>3</td><td>时间点或持续时间</td><td>HH:MM:SS</td></tr><tr><td>YEAR</td><td>1</td><td>年份值</td><td>YYYY</td></tr><tr><td>CHAR</td><td>0~255</td><td>定长字符串</td><td></td></tr><tr><td>VARCHAR</td><td>0~255</td><td>变长字符串</td><td></td></tr><tr><td>TEXT</td><td>0~65535</td><td>长文本数据</td></tr></tbody></table></div><p><strong>CHAR 和 VARCHAR 的区别:</strong> CHAR 的长度是固定的，而 VARCHAR 的长度是可以变化的，比如，存储字符串 “abc”，对于 CHAR(10)，表示存储的字符将占 10 个字节(包括 7 个空字符)，而同样的 VARCHAR(12) 则只占用 4 个字节的长度，<code>增加一个额外字节来存储字符串本身的长度</code>，12 只是最大值，当你存储的字符小于 12 时，按实际长度存储。</p><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>插入语句为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO 表名(列名a,列名b，列名c) VALUES(值1，值2，值3);</span><br><span class="line">比如向表employee中插入三个人的数据：</span><br><span class="line">INSERT INTO employee(id,name,phone) VALUES(123,&#x27;TOM&#x27;,245);</span><br><span class="line">INSERT INTO employee(id,name,phone) VALUES(133,&#x27;Jacky&#x27;,235);</span><br><span class="line">INSERT INTO employee(id,name) VALUES(143,&#x27;Bob&#x27;);</span><br></pre></td></tr></table></figure><p>注意有些数据类型在插入的时候需要用单引号括起来，比如Tom Jacky Bob,因为他们的数据类型是char，类似的数据类型有VARCHAR,ENUM,TEXT,DATE,TIME等。</p><p>对于第三个语句，其phone的值为null。<strong>并且注意挨着括号的不能有逗号。</strong></p><p>插入完成之后可以使用  <span style="color:red;font-size:文字大小;font-family:字体;"> select * from employee; </span>命令查看一下插入是否成功。</p><h2 id="数据库约束"><a href="#数据库约束" class="headerlink" title="数据库约束"></a>数据库约束</h2><p>约束是一种限制，它通过对表的行或列的数据做出限制，来确保表的数据的完整性、唯一性。</p><p>比如规定一个用户的用户名不能为空值且没有重复记录，这就是一种约束规则。</p><p>在mysql中，有以下几种约束：</p><div class="table-container"><table><thead><tr><th>约束类型：</th><th>主键</th><th>默认值</th><th>唯一</th><th>外键</th><th>非空</th></tr></thead><tbody><tr><td>关键字：</td><td>PRIMARY KEY</td><td>DEFAULT</td><td>UNIQUE</td><td>FOREIGN KEY</td><td>NOT NULL</td></tr></tbody></table></div><h3 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h3><p>在数据库中，如果有两行记录数据完全一样，那么如何来区分呢？ 答案是无法区分，如果有两行记录完全相同，那么对于 Mysql 就会认定它们是同一个实体，这与现实生活是存在差别的。</p><p>假如我们要存储一个学生的信息，信息包含姓名，身高，性别，年龄。</p><p>不幸的是有两个女孩都叫小梦，且她们的身高和年龄相同，数据库将无法区分这两个实体，这时就需要用到主键了。</p><p>主键（PRIMARY KEY）作为数据表中一行数据的唯一标识符，在一张表中通过主键就能准确定位到某一行数据，因此主键十分重要，它不能有重复记录且不能为空。定义主键的方式有如下几种：</p><p><img src="C:\Users\86173\AppData\Roaming\Typora\typora-user-images\image-20230305192647953.png" alt="image-20230305192647953"></p><p><img src="C:\Users\86173\AppData\Roaming\Typora\typora-user-images\image-20230305192701500.png" alt="image-20230305192701500"></p><p>还有一种复合主键，意思是可以通过表中的两列或者多列共同标识。</p><p><img src="C:\Users\86173\AppData\Roaming\Typora\typora-user-images\image-20230305192708446.png" alt="image-20230305192708446"></p><h3 id="默认约束-DEFAULT"><a href="#默认约束-DEFAULT" class="headerlink" title="默认约束(DEFAULT)"></a>默认约束(DEFAULT)</h3><p>默认值约束 (DEFAULT) 规定，当有 DEFAULT 约束的列，插入数据为空时，将使用默认值。</p><p>默认值常用于一些可有可无的字段，比如用户的个性签名，如果用户没有设置，系统给他应该设定一个默认的文本，比如空文本或我们常见的 ‘这个人太懒了，没有留下任何信息’。</p><p>DEFAULT约束只会在使用INSERT语句的时候体现出来。就是说当insert into tablename（）values（）时，当tablename（）中的参数有default约束并且insert时没有赋值的时候，这个位置就会被DEFAULT的值代替，上面练习的insert中的第三个语句就是。</p><p>下面这段代码包含了DEFAULT约束：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">employee_info varchar(50) DEFAULT &#x27;这个人很懒，什么也没写&#x27;，</span><br></pre></td></tr></table></figure><h3 id="唯一约束（UNIQUE）"><a href="#唯一约束（UNIQUE）" class="headerlink" title="唯一约束（UNIQUE）"></a>唯一约束（UNIQUE）</h3><p>唯一约束，顾名思义，就是说这个表中的这一列的值不能有重复的值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNIQUE(phone_num),</span><br></pre></td></tr></table></figure><p>当设置完table的时候，可以insert两个相同的值，验证一下unique是否生效。</p><h3 id="外键（FOREIGN-KEY）"><a href="#外键（FOREIGN-KEY）" class="headerlink" title="外键（FOREIGN KEY）"></a>外键（FOREIGN KEY）</h3><p>外键 (FOREIGN KEY) 既能确保数据完整性，也能表现表之间的关系。</p><p>比如，现在有用户表和文章表，给文章表中添加一个指向用户 id 的外键，表示这篇文章所属的用户 id，外键将确保这个外键指向的记录是存在的，如果你尝试删除一个用户，而这个用户还有文章存在于数据库中，那么操作将无法完成并报错。因为你删除了该用户过后，他发布的文章都没有所属用户了，而这样的情况是不被允许的。同理，你在创建一篇文章的时候也不能为它指定一个不存在的用户 id。</p><p><span style="color:red">一个表可以有多个外键，每个外键必须 REFERENCES (参考) 另一个表的主键，被外键约束的列，取值必须在它参考的列中有对应值。</span></p><p>定义表的时候用下面语句定义外键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONSTRAINT (自定义外键名字) FOREIGN KEY(int_dpt) REFERENCES department(dpt_name) </span><br></pre></td></tr></table></figure><p>一般写在最下面。</p><h3 id="非空约束（NOT-NULL）"><a href="#非空约束（NOT-NULL）" class="headerlink" title="非空约束（NOT NULL）"></a>非空约束（NOT NULL）</h3><p>非空约束 (NOT NULL),听名字就能理解，被非空约束的列，在插入值时必须非空。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salary int(10) NOT NULL,</span><br></pre></td></tr></table></figure><p>若插入违反非空约束的话，就会报错。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库学习.md</title>
      <link href="/Bihanso.github.io//7043975b.html"/>
      <url>/Bihanso.github.io//7043975b.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/Bihanso.github.io/assets/css/APlayer.min.css"><script src="/Bihanso.github.io/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
